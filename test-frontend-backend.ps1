# Script test k·∫øt n·ªëi Frontend - Backend
Write-Host "üîó KI·ªÇM TRA K·∫æT N·ªêI FRONTEND - BACKEND" -ForegroundColor Yellow

$backendUrl = "https://passion-quan-li-khach-san.onrender.com"
$frontendUrl = "https://passion-quan-li-khach-san-git-main-conghieus-projects.vercel.app"

Write-Host "`n1. Ki·ªÉm tra Backend API..." -ForegroundColor Cyan
try {
    $backendResponse = Invoke-RestMethod -Uri "$backendUrl/api/health" -Method GET -TimeoutSec 30
    Write-Host "‚úÖ Backend API ho·∫°t ƒë·ªông" -ForegroundColor Green
    Write-Host "Response: $($backendResponse | ConvertTo-Json)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Backend API l·ªói: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "‚ö†Ô∏è ƒê·∫£m b·∫£o backend ƒë√£ ƒë∆∞·ª£c deploy th√†nh c√¥ng" -ForegroundColor Yellow
}

Write-Host "`n2. Ki·ªÉm tra Frontend..." -ForegroundColor Cyan
try {
    $frontendResponse = Invoke-WebRequest -Uri $frontendUrl -Method GET -TimeoutSec 30
    if ($frontendResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ Frontend ho·∫°t ƒë·ªông" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Frontend tr·∫£ v·ªÅ status: $($frontendResponse.StatusCode)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Frontend l·ªói: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n3. Test CORS t·ª´ Frontend domain..." -ForegroundColor Cyan
$corsHeaders = @{
    'Origin' = $frontendUrl
    'Access-Control-Request-Method' = 'GET'
    'Access-Control-Request-Headers' = 'Content-Type,Authorization'
}

try {
    $corsResponse = Invoke-WebRequest -Uri "$backendUrl/api/health" -Method OPTIONS -Headers $corsHeaders -TimeoutSec 30
    $allowOrigin = $corsResponse.Headers['Access-Control-Allow-Origin']
    if ($allowOrigin -and ($allowOrigin -eq $frontendUrl -or $allowOrigin -eq '*')) {
        Write-Host "‚úÖ CORS ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng cho frontend" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è CORS c√≥ th·ªÉ ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng" -ForegroundColor Yellow
        Write-Host "Allow-Origin: $allowOrigin" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå CORS test l·ªói: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n4. Test API endpoint c·ª• th·ªÉ..." -ForegroundColor Cyan
$testEndpoints = @(
    "/api/health",
    "/api/LoaiPhong",
    "/api/Phong"
)

foreach ($endpoint in $testEndpoints) {
    try {
        $response = Invoke-RestMethod -Uri "$backendUrl$endpoint" -Method GET -TimeoutSec 15
        Write-Host "‚úÖ $endpoint ho·∫°t ƒë·ªông" -ForegroundColor Green
    } catch {
        if ($_.Exception.Response.StatusCode -eq 401) {
            Write-Host "üîê $endpoint c·∫ßn authentication (401) - B√¨nh th∆∞·ªùng" -ForegroundColor Yellow
        } else {
            Write-Host "‚ùå $endpoint l·ªói: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
}

Write-Host "`nüìã H∆Ø·ªöNG D·∫™N TI·∫æP THEO:" -ForegroundColor Yellow
Write-Host "1. N·∫øu Backend l·ªói:" -ForegroundColor White
Write-Host "   - Ki·ªÉm tra Render Dashboard logs" -ForegroundColor Gray
Write-Host "   - ƒê·∫£m b·∫£o service ƒëang ch·∫°y" -ForegroundColor Gray

Write-Host "2. N·∫øu Frontend l·ªói:" -ForegroundColor White
Write-Host "   - Ki·ªÉm tra Vercel Dashboard" -ForegroundColor Gray
Write-Host "   - ƒê·∫£m b·∫£o environment variables ƒë√£ ƒë∆∞·ª£c set" -ForegroundColor Gray

Write-Host "3. N·∫øu CORS l·ªói:" -ForegroundColor White
Write-Host "   - C·∫≠p nh·∫≠t AllowedOrigins trong backend" -ForegroundColor Gray
Write-Host "   - Redeploy backend" -ForegroundColor Gray

Write-Host "`nüîó LINKS QUAN TR·ªåNG:" -ForegroundColor Yellow
Write-Host "- Backend: $backendUrl" -ForegroundColor White
Write-Host "- Backend Health: $backendUrl/api/health" -ForegroundColor White
Write-Host "- Backend Swagger: $backendUrl/swagger" -ForegroundColor White
Write-Host "- Frontend: $frontendUrl" -ForegroundColor White
