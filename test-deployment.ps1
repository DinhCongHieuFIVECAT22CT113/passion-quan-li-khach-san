# Script ki·ªÉm tra deployment
Write-Host "üîç KI·ªÇM TRA DEPLOYMENT BACKEND" -ForegroundColor Yellow

$baseUrl = "https://passion-quan-li-khach-san.onrender.com"

Write-Host "`n1. Ki·ªÉm tra endpoint ch√≠nh..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri $baseUrl -Method GET -TimeoutSec 30
    Write-Host "‚úÖ Endpoint ch√≠nh ho·∫°t ƒë·ªông" -ForegroundColor Green
    Write-Host "Response: $($response | ConvertTo-Json)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Endpoint ch√≠nh l·ªói: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n2. Ki·ªÉm tra health check..." -ForegroundColor Cyan
try {
    $healthResponse = Invoke-RestMethod -Uri "$baseUrl/api/health" -Method GET -TimeoutSec 30
    Write-Host "‚úÖ Health check ho·∫°t ƒë·ªông" -ForegroundColor Green
    Write-Host "Response: $($healthResponse | ConvertTo-Json)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Health check l·ªói: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n3. Ki·ªÉm tra Swagger UI..." -ForegroundColor Cyan
try {
    $swaggerResponse = Invoke-WebRequest -Uri "$baseUrl/swagger" -Method GET -TimeoutSec 30
    if ($swaggerResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ Swagger UI ho·∫°t ƒë·ªông" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Swagger UI tr·∫£ v·ªÅ status: $($swaggerResponse.StatusCode)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Swagger UI l·ªói: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n4. Test CORS..." -ForegroundColor Cyan
$corsHeaders = @{
    'Origin' = 'https://passion-quan-li-khach-san-git-main-conghieus-projects.vercel.app'
    'Access-Control-Request-Method' = 'GET'
    'Access-Control-Request-Headers' = 'Content-Type'
}

try {
    $corsResponse = Invoke-WebRequest -Uri $baseUrl -Method OPTIONS -Headers $corsHeaders -TimeoutSec 30
    if ($corsResponse.Headers['Access-Control-Allow-Origin']) {
        Write-Host "‚úÖ CORS ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è CORS c√≥ th·ªÉ ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå CORS test l·ªói: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüìã K·∫æT QU·∫¢ T·ªîNG QUAN:" -ForegroundColor Yellow
Write-Host "- Truy c·∫≠p tr·ª±c ti·∫øp: $baseUrl" -ForegroundColor White
Write-Host "- Health check: $baseUrl/api/health" -ForegroundColor White
Write-Host "- Swagger UI: $baseUrl/swagger" -ForegroundColor White

Write-Host "`nüîß N·∫æU V·∫™N L·ªñI:" -ForegroundColor Yellow
Write-Host "1. Ki·ªÉm tra Render Dashboard logs" -ForegroundColor White
Write-Host "2. ƒê·∫£m b·∫£o ƒë√£ commit v√† push code m·ªõi" -ForegroundColor White
Write-Host "3. Th·ª±c hi·ªán Manual Deploy tr√™n Render" -ForegroundColor White
Write-Host "4. Ch·ªù 2-3 ph√∫t ƒë·ªÉ service kh·ªüi ƒë·ªông ho√†n to√†n" -ForegroundColor White
